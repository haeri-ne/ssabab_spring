# Application ??
spring.application.name=back

# ?????? ?? ??
spring.datasource.url=jdbc:mysql://localhost:3307/ssabab?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
spring.datasource.username=shyo2
spring.datasource.password=shyo2
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA ??
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# JWT configuration
jwt.secret=MyJwtSecretKeyExample12345
jwt.accessTokenExpiration=1800000    # 30 minutes (in milliseconds)
jwt.refreshTokenExpiration=604800000  # 7 days (in milliseconds)


# OAuth2 - Google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# OAuth2 - GitHub
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}

# private e-mail까지 조회하려면 user:email 권한이 필요합니다
spring.security.oauth2.client.registration.github.scope=user:email
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# (GitHub는 기본 provider 정보가 Spring Security에 내장돼 있으므로 별도 provider.* 설정 필요 없음)


# 소셜 로그인 성공 후 프론트엔드로 이동할 URI
app.oauth2.redirect-uri=https://www.ssabab.com/auth/oauth2/success